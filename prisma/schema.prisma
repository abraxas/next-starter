generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  providerAccountId String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  expires_at        Int?
  provider          String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "account_userId_users_id_fk")

  @@id([providerAccountId, provider])
}

model Organization {
  id        String   @id @default(uuid())
  slug      String   @unique(map: "organization_name_key")
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Session {
  id              String   @id @default(uuid())
  accountId       String?
  userId          String
  expiresAt       DateTime @db.Timestamp(6)
  organization_id String?

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum PasswordAlgorithm {
  PLAINTEXT
  BCRYPT
  ARGON2
}

model User {
  id                String             @id @default(uuid())
  name              String?
  email             String?
  hashedPassword    String?
  passwordAlgorithm PasswordAlgorithm?
  emailVerified     DateTime?
  image             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
  organizationId    String?
  username          String?
  accounts          Account[]
  sessions          Session[]
  adminUser         AdminUser?
}

model AdminUser {
  id     String @id @default(uuid())
  userId String @unique

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime
}
